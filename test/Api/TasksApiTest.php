<?php
/**
 * TasksApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Dastra API
 *
 * Dastra's public REST API
 *
 * The version of the OpenAPI document: v1
 * Contact: antoine.bidault@dastra.eu
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * TasksApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class TasksApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for tasksArchive
     *
     * .
     *
     */
    public function testTasksArchive()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksBurnDownChart
     *
     * .
     *
     */
    public function testTasksBurnDownChart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksColumns
     *
     * Columns available for table display.
     *
     */
    public function testTasksColumns()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksCreate
     *
     * Task creation.
     *
     */
    public function testTasksCreate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksCumulativeFlowChart
     *
     * .
     *
     */
    public function testTasksCumulativeFlowChart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksDelete
     *
     * .
     *
     */
    public function testTasksDelete()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksExport
     *
     * Export the records in any format.
     *
     */
    public function testTasksExport()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksFind
     *
     * Get a single task by id.
     *
     */
    public function testTasksFind()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksList
     *
     * .
     *
     */
    public function testTasksList()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksListGrouped
     *
     * Get tasks grouped by workflow steps.
     *
     */
    public function testTasksListGrouped()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksPatch
     *
     * .
     *
     */
    public function testTasksPatch()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksReporting
     *
     * .
     *
     */
    public function testTasksReporting()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksSortOrder
     *
     * Switching the current state of the element  Using this system   https://stackoverflow.com/questions/398425/maintaining-sort-order-of-database-table-rows.
     *
     */
    public function testTasksSortOrder()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksStats
     *
     * .
     *
     */
    public function testTasksStats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksUpdate
     *
     * Task update.
     *
     */
    public function testTasksUpdate()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksUpdateWorkflow
     *
     * Switching the current state of the element.
     *
     */
    public function testTasksUpdateWorkflow()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksVelocityChart
     *
     * .
     *
     */
    public function testTasksVelocityChart()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for tasksWorkflowStats
     *
     * Get the workflow stats.
     *
     */
    public function testTasksWorkflowStats()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
