<?php
/**
 * DataProcessingRestoreDto
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Dastra API
 *
 * Dastra's public REST API
 *
 * The version of the OpenAPI document: v1
 * Contact: antoine.bidault@dastra.eu
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DataProcessingRestoreDto Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class DataProcessingRestoreDto implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'DataProcessingRestoreDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'string',
        'label' => 'string',
        'state' => '\OpenAPI\Client\Model\DataProcessingState',
        'date_deployment' => '\DateTime',
        'date_creation' => '\DateTime',
        'date_archived' => '\DateTime',
        'archived' => 'bool',
        'date_update' => '\DateTime',
        'version_description' => 'string',
        'processing_type' => '\OpenAPI\Client\Model\ProcessingType',
        'area_id' => 'int',
        'area' => '\OpenAPI\Client\Model\AreaDto',
        'entity' => '\OpenAPI\Client\Model\AreaDto',
        'merged_from' => '\OpenAPI\Client\Model\DataProcessingDto',
        'merge_type' => '\OpenAPI\Client\Model\RelationShipType',
        'readonly' => 'bool',
        'editable' => 'bool',
        'applications' => '\OpenAPI\Client\Model\ApplicationDto[]',
        'work_flow_step_id' => 'int',
        'workflow_step' => '\OpenAPI\Client\Model\WorkFlowStepDto',
        'attachments' => '\OpenAPI\Client\Model\AttachmentDto[]',
        'ref' => 'string',
        'processing_state' => '\OpenAPI\Client\Model\ProcessingState',
        'description' => 'string',
        'tags' => '\OpenAPI\Client\Model\TagDto[]',
        'subject_right_process_description' => 'string',
        'right_of_information' => '\OpenAPI\Client\Model\AccessType',
        'right_of_access' => '\OpenAPI\Client\Model\AccessType',
        'right_of_rectification' => '\OpenAPI\Client\Model\AccessType',
        'right_of_erasure' => '\OpenAPI\Client\Model\AccessType',
        'right_of_restriction' => '\OpenAPI\Client\Model\AccessType',
        'right_of_opposition' => '\OpenAPI\Client\Model\AccessType',
        'right_of_data_portability' => '\OpenAPI\Client\Model\AccessType',
        'advance_directives' => '\OpenAPI\Client\Model\AccessType',
        'advance_directives_description' => 'string',
        'right_of_information_description' => 'string',
        'right_of_access_description' => 'string',
        'right_of_rectification_description' => 'string',
        'right_of_erasure_description' => 'string',
        'right_of_restriction_description' => 'string',
        'right_of_opposition_description' => 'string',
        'right_of_data_portability_description' => 'string',
        'referent' => '\OpenAPI\Client\Model\ActorDto',
        'stake_holders' => '\OpenAPI\Client\Model\UserDataTreatmentDto[]',
        'assessment_scoring' => 'bool',
        'automatic_decision' => 'bool',
        'systematic_monitoring' => 'bool',
        'special_category_data' => 'bool',
        'large_scale_collection' => 'bool',
        'cross_referencing' => 'bool',
        'out_of_eu_transfers' => 'bool',
        'vulnerable_people' => 'bool',
        'is_dpia_required' => 'bool',
        'dpia_date' => '\DateTime',
        'innovative_use' => 'bool',
        'exclusion_benefit_right_contract' => 'bool',
        'customers' => '\OpenAPI\Client\Model\ActorDto[]',
        'recipients' => '\OpenAPI\Client\Model\RecipientDto[]',
        'data_retention_rules' => '\OpenAPI\Client\Model\DataRetentionRuleDto[]',
        'purposes' => '\OpenAPI\Client\Model\PurposeDto[]',
        'security_measures' => '\OpenAPI\Client\Model\SecurityMeasureDataTreatmentDto[]',
        'person_categories' => '\OpenAPI\Client\Model\PersonCategoryDto[]',
        'progression' => 'double',
        'quality' => 'double',
        'risk_level' => 'double',
        'visible' => 'bool',
        'work_space_id' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'uuid',
        'label' => null,
        'state' => null,
        'date_deployment' => 'date-time',
        'date_creation' => 'date-time',
        'date_archived' => 'date-time',
        'archived' => null,
        'date_update' => 'date-time',
        'version_description' => null,
        'processing_type' => null,
        'area_id' => 'int32',
        'area' => null,
        'entity' => null,
        'merged_from' => null,
        'merge_type' => null,
        'readonly' => null,
        'editable' => null,
        'applications' => null,
        'work_flow_step_id' => 'int32',
        'workflow_step' => null,
        'attachments' => null,
        'ref' => null,
        'processing_state' => null,
        'description' => null,
        'tags' => null,
        'subject_right_process_description' => null,
        'right_of_information' => null,
        'right_of_access' => null,
        'right_of_rectification' => null,
        'right_of_erasure' => null,
        'right_of_restriction' => null,
        'right_of_opposition' => null,
        'right_of_data_portability' => null,
        'advance_directives' => null,
        'advance_directives_description' => null,
        'right_of_information_description' => null,
        'right_of_access_description' => null,
        'right_of_rectification_description' => null,
        'right_of_erasure_description' => null,
        'right_of_restriction_description' => null,
        'right_of_opposition_description' => null,
        'right_of_data_portability_description' => null,
        'referent' => null,
        'stake_holders' => null,
        'assessment_scoring' => null,
        'automatic_decision' => null,
        'systematic_monitoring' => null,
        'special_category_data' => null,
        'large_scale_collection' => null,
        'cross_referencing' => null,
        'out_of_eu_transfers' => null,
        'vulnerable_people' => null,
        'is_dpia_required' => null,
        'dpia_date' => 'date-time',
        'innovative_use' => null,
        'exclusion_benefit_right_contract' => null,
        'customers' => null,
        'recipients' => null,
        'data_retention_rules' => null,
        'purposes' => null,
        'security_measures' => null,
        'person_categories' => null,
        'progression' => 'double',
        'quality' => 'double',
        'risk_level' => 'double',
        'visible' => null,
        'work_space_id' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'label' => 'label',
        'state' => 'state',
        'date_deployment' => 'dateDeployment',
        'date_creation' => 'dateCreation',
        'date_archived' => 'dateArchived',
        'archived' => 'archived',
        'date_update' => 'dateUpdate',
        'version_description' => 'versionDescription',
        'processing_type' => 'processingType',
        'area_id' => 'areaId',
        'area' => 'area',
        'entity' => 'entity',
        'merged_from' => 'mergedFrom',
        'merge_type' => 'mergeType',
        'readonly' => 'readonly',
        'editable' => 'editable',
        'applications' => 'applications',
        'work_flow_step_id' => 'workFlowStepId',
        'workflow_step' => 'workflowStep',
        'attachments' => 'attachments',
        'ref' => 'ref',
        'processing_state' => 'processingState',
        'description' => 'description',
        'tags' => 'tags',
        'subject_right_process_description' => 'subjectRightProcessDescription',
        'right_of_information' => 'rightOfInformation',
        'right_of_access' => 'rightOfAccess',
        'right_of_rectification' => 'rightOfRectification',
        'right_of_erasure' => 'rightOfErasure',
        'right_of_restriction' => 'rightOfRestriction',
        'right_of_opposition' => 'rightOfOpposition',
        'right_of_data_portability' => 'rightOfDataPortability',
        'advance_directives' => 'advanceDirectives',
        'advance_directives_description' => 'advanceDirectivesDescription',
        'right_of_information_description' => 'rightOfInformationDescription',
        'right_of_access_description' => 'rightOfAccessDescription',
        'right_of_rectification_description' => 'rightOfRectificationDescription',
        'right_of_erasure_description' => 'rightOfErasureDescription',
        'right_of_restriction_description' => 'rightOfRestrictionDescription',
        'right_of_opposition_description' => 'rightOfOppositionDescription',
        'right_of_data_portability_description' => 'rightOfDataPortabilityDescription',
        'referent' => 'referent',
        'stake_holders' => 'stakeHolders',
        'assessment_scoring' => 'assessmentScoring',
        'automatic_decision' => 'automaticDecision',
        'systematic_monitoring' => 'systematicMonitoring',
        'special_category_data' => 'specialCategoryData',
        'large_scale_collection' => 'largeScaleCollection',
        'cross_referencing' => 'crossReferencing',
        'out_of_eu_transfers' => 'outOfEUTransfers',
        'vulnerable_people' => 'vulnerablePeople',
        'is_dpia_required' => 'isDPIARequired',
        'dpia_date' => 'dpiaDate',
        'innovative_use' => 'innovativeUse',
        'exclusion_benefit_right_contract' => 'exclusionBenefitRightContract',
        'customers' => 'customers',
        'recipients' => 'recipients',
        'data_retention_rules' => 'dataRetentionRules',
        'purposes' => 'purposes',
        'security_measures' => 'securityMeasures',
        'person_categories' => 'personCategories',
        'progression' => 'progression',
        'quality' => 'quality',
        'risk_level' => 'riskLevel',
        'visible' => 'visible',
        'work_space_id' => 'workSpaceId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'label' => 'setLabel',
        'state' => 'setState',
        'date_deployment' => 'setDateDeployment',
        'date_creation' => 'setDateCreation',
        'date_archived' => 'setDateArchived',
        'archived' => 'setArchived',
        'date_update' => 'setDateUpdate',
        'version_description' => 'setVersionDescription',
        'processing_type' => 'setProcessingType',
        'area_id' => 'setAreaId',
        'area' => 'setArea',
        'entity' => 'setEntity',
        'merged_from' => 'setMergedFrom',
        'merge_type' => 'setMergeType',
        'readonly' => 'setReadonly',
        'editable' => 'setEditable',
        'applications' => 'setApplications',
        'work_flow_step_id' => 'setWorkFlowStepId',
        'workflow_step' => 'setWorkflowStep',
        'attachments' => 'setAttachments',
        'ref' => 'setRef',
        'processing_state' => 'setProcessingState',
        'description' => 'setDescription',
        'tags' => 'setTags',
        'subject_right_process_description' => 'setSubjectRightProcessDescription',
        'right_of_information' => 'setRightOfInformation',
        'right_of_access' => 'setRightOfAccess',
        'right_of_rectification' => 'setRightOfRectification',
        'right_of_erasure' => 'setRightOfErasure',
        'right_of_restriction' => 'setRightOfRestriction',
        'right_of_opposition' => 'setRightOfOpposition',
        'right_of_data_portability' => 'setRightOfDataPortability',
        'advance_directives' => 'setAdvanceDirectives',
        'advance_directives_description' => 'setAdvanceDirectivesDescription',
        'right_of_information_description' => 'setRightOfInformationDescription',
        'right_of_access_description' => 'setRightOfAccessDescription',
        'right_of_rectification_description' => 'setRightOfRectificationDescription',
        'right_of_erasure_description' => 'setRightOfErasureDescription',
        'right_of_restriction_description' => 'setRightOfRestrictionDescription',
        'right_of_opposition_description' => 'setRightOfOppositionDescription',
        'right_of_data_portability_description' => 'setRightOfDataPortabilityDescription',
        'referent' => 'setReferent',
        'stake_holders' => 'setStakeHolders',
        'assessment_scoring' => 'setAssessmentScoring',
        'automatic_decision' => 'setAutomaticDecision',
        'systematic_monitoring' => 'setSystematicMonitoring',
        'special_category_data' => 'setSpecialCategoryData',
        'large_scale_collection' => 'setLargeScaleCollection',
        'cross_referencing' => 'setCrossReferencing',
        'out_of_eu_transfers' => 'setOutOfEuTransfers',
        'vulnerable_people' => 'setVulnerablePeople',
        'is_dpia_required' => 'setIsDpiaRequired',
        'dpia_date' => 'setDpiaDate',
        'innovative_use' => 'setInnovativeUse',
        'exclusion_benefit_right_contract' => 'setExclusionBenefitRightContract',
        'customers' => 'setCustomers',
        'recipients' => 'setRecipients',
        'data_retention_rules' => 'setDataRetentionRules',
        'purposes' => 'setPurposes',
        'security_measures' => 'setSecurityMeasures',
        'person_categories' => 'setPersonCategories',
        'progression' => 'setProgression',
        'quality' => 'setQuality',
        'risk_level' => 'setRiskLevel',
        'visible' => 'setVisible',
        'work_space_id' => 'setWorkSpaceId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'label' => 'getLabel',
        'state' => 'getState',
        'date_deployment' => 'getDateDeployment',
        'date_creation' => 'getDateCreation',
        'date_archived' => 'getDateArchived',
        'archived' => 'getArchived',
        'date_update' => 'getDateUpdate',
        'version_description' => 'getVersionDescription',
        'processing_type' => 'getProcessingType',
        'area_id' => 'getAreaId',
        'area' => 'getArea',
        'entity' => 'getEntity',
        'merged_from' => 'getMergedFrom',
        'merge_type' => 'getMergeType',
        'readonly' => 'getReadonly',
        'editable' => 'getEditable',
        'applications' => 'getApplications',
        'work_flow_step_id' => 'getWorkFlowStepId',
        'workflow_step' => 'getWorkflowStep',
        'attachments' => 'getAttachments',
        'ref' => 'getRef',
        'processing_state' => 'getProcessingState',
        'description' => 'getDescription',
        'tags' => 'getTags',
        'subject_right_process_description' => 'getSubjectRightProcessDescription',
        'right_of_information' => 'getRightOfInformation',
        'right_of_access' => 'getRightOfAccess',
        'right_of_rectification' => 'getRightOfRectification',
        'right_of_erasure' => 'getRightOfErasure',
        'right_of_restriction' => 'getRightOfRestriction',
        'right_of_opposition' => 'getRightOfOpposition',
        'right_of_data_portability' => 'getRightOfDataPortability',
        'advance_directives' => 'getAdvanceDirectives',
        'advance_directives_description' => 'getAdvanceDirectivesDescription',
        'right_of_information_description' => 'getRightOfInformationDescription',
        'right_of_access_description' => 'getRightOfAccessDescription',
        'right_of_rectification_description' => 'getRightOfRectificationDescription',
        'right_of_erasure_description' => 'getRightOfErasureDescription',
        'right_of_restriction_description' => 'getRightOfRestrictionDescription',
        'right_of_opposition_description' => 'getRightOfOppositionDescription',
        'right_of_data_portability_description' => 'getRightOfDataPortabilityDescription',
        'referent' => 'getReferent',
        'stake_holders' => 'getStakeHolders',
        'assessment_scoring' => 'getAssessmentScoring',
        'automatic_decision' => 'getAutomaticDecision',
        'systematic_monitoring' => 'getSystematicMonitoring',
        'special_category_data' => 'getSpecialCategoryData',
        'large_scale_collection' => 'getLargeScaleCollection',
        'cross_referencing' => 'getCrossReferencing',
        'out_of_eu_transfers' => 'getOutOfEuTransfers',
        'vulnerable_people' => 'getVulnerablePeople',
        'is_dpia_required' => 'getIsDpiaRequired',
        'dpia_date' => 'getDpiaDate',
        'innovative_use' => 'getInnovativeUse',
        'exclusion_benefit_right_contract' => 'getExclusionBenefitRightContract',
        'customers' => 'getCustomers',
        'recipients' => 'getRecipients',
        'data_retention_rules' => 'getDataRetentionRules',
        'purposes' => 'getPurposes',
        'security_measures' => 'getSecurityMeasures',
        'person_categories' => 'getPersonCategories',
        'progression' => 'getProgression',
        'quality' => 'getQuality',
        'risk_level' => 'getRiskLevel',
        'visible' => 'getVisible',
        'work_space_id' => 'getWorkSpaceId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['label'] = $data['label'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['date_deployment'] = $data['date_deployment'] ?? null;
        $this->container['date_creation'] = $data['date_creation'] ?? null;
        $this->container['date_archived'] = $data['date_archived'] ?? null;
        $this->container['archived'] = $data['archived'] ?? null;
        $this->container['date_update'] = $data['date_update'] ?? null;
        $this->container['version_description'] = $data['version_description'] ?? null;
        $this->container['processing_type'] = $data['processing_type'] ?? null;
        $this->container['area_id'] = $data['area_id'] ?? null;
        $this->container['area'] = $data['area'] ?? null;
        $this->container['entity'] = $data['entity'] ?? null;
        $this->container['merged_from'] = $data['merged_from'] ?? null;
        $this->container['merge_type'] = $data['merge_type'] ?? null;
        $this->container['readonly'] = $data['readonly'] ?? null;
        $this->container['editable'] = $data['editable'] ?? null;
        $this->container['applications'] = $data['applications'] ?? null;
        $this->container['work_flow_step_id'] = $data['work_flow_step_id'] ?? null;
        $this->container['workflow_step'] = $data['workflow_step'] ?? null;
        $this->container['attachments'] = $data['attachments'] ?? null;
        $this->container['ref'] = $data['ref'] ?? null;
        $this->container['processing_state'] = $data['processing_state'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['tags'] = $data['tags'] ?? null;
        $this->container['subject_right_process_description'] = $data['subject_right_process_description'] ?? null;
        $this->container['right_of_information'] = $data['right_of_information'] ?? null;
        $this->container['right_of_access'] = $data['right_of_access'] ?? null;
        $this->container['right_of_rectification'] = $data['right_of_rectification'] ?? null;
        $this->container['right_of_erasure'] = $data['right_of_erasure'] ?? null;
        $this->container['right_of_restriction'] = $data['right_of_restriction'] ?? null;
        $this->container['right_of_opposition'] = $data['right_of_opposition'] ?? null;
        $this->container['right_of_data_portability'] = $data['right_of_data_portability'] ?? null;
        $this->container['advance_directives'] = $data['advance_directives'] ?? null;
        $this->container['advance_directives_description'] = $data['advance_directives_description'] ?? null;
        $this->container['right_of_information_description'] = $data['right_of_information_description'] ?? null;
        $this->container['right_of_access_description'] = $data['right_of_access_description'] ?? null;
        $this->container['right_of_rectification_description'] = $data['right_of_rectification_description'] ?? null;
        $this->container['right_of_erasure_description'] = $data['right_of_erasure_description'] ?? null;
        $this->container['right_of_restriction_description'] = $data['right_of_restriction_description'] ?? null;
        $this->container['right_of_opposition_description'] = $data['right_of_opposition_description'] ?? null;
        $this->container['right_of_data_portability_description'] = $data['right_of_data_portability_description'] ?? null;
        $this->container['referent'] = $data['referent'] ?? null;
        $this->container['stake_holders'] = $data['stake_holders'] ?? null;
        $this->container['assessment_scoring'] = $data['assessment_scoring'] ?? null;
        $this->container['automatic_decision'] = $data['automatic_decision'] ?? null;
        $this->container['systematic_monitoring'] = $data['systematic_monitoring'] ?? null;
        $this->container['special_category_data'] = $data['special_category_data'] ?? null;
        $this->container['large_scale_collection'] = $data['large_scale_collection'] ?? null;
        $this->container['cross_referencing'] = $data['cross_referencing'] ?? null;
        $this->container['out_of_eu_transfers'] = $data['out_of_eu_transfers'] ?? null;
        $this->container['vulnerable_people'] = $data['vulnerable_people'] ?? null;
        $this->container['is_dpia_required'] = $data['is_dpia_required'] ?? null;
        $this->container['dpia_date'] = $data['dpia_date'] ?? null;
        $this->container['innovative_use'] = $data['innovative_use'] ?? null;
        $this->container['exclusion_benefit_right_contract'] = $data['exclusion_benefit_right_contract'] ?? null;
        $this->container['customers'] = $data['customers'] ?? null;
        $this->container['recipients'] = $data['recipients'] ?? null;
        $this->container['data_retention_rules'] = $data['data_retention_rules'] ?? null;
        $this->container['purposes'] = $data['purposes'] ?? null;
        $this->container['security_measures'] = $data['security_measures'] ?? null;
        $this->container['person_categories'] = $data['person_categories'] ?? null;
        $this->container['progression'] = $data['progression'] ?? null;
        $this->container['quality'] = $data['quality'] ?? null;
        $this->container['risk_level'] = $data['risk_level'] ?? null;
        $this->container['visible'] = $data['visible'] ?? null;
        $this->container['work_space_id'] = $data['work_space_id'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['label'] === null) {
            $invalidProperties[] = "'label' can't be null";
        }
        if ((mb_strlen($this->container['label']) > 120)) {
            $invalidProperties[] = "invalid value for 'label', the character length must be smaller than or equal to 120.";
        }

        if ((mb_strlen($this->container['label']) < 1)) {
            $invalidProperties[] = "invalid value for 'label', the character length must be bigger than or equal to 1.";
        }

        if (!is_null($this->container['version_description']) && (mb_strlen($this->container['version_description']) > 800)) {
            $invalidProperties[] = "invalid value for 'version_description', the character length must be smaller than or equal to 800.";
        }

        if (!is_null($this->container['ref']) && (mb_strlen($this->container['ref']) > 50)) {
            $invalidProperties[] = "invalid value for 'ref', the character length must be smaller than or equal to 50.";
        }

        if (!is_null($this->container['description']) && (mb_strlen($this->container['description']) > 3000)) {
            $invalidProperties[] = "invalid value for 'description', the character length must be smaller than or equal to 3000.";
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return string|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets label
     *
     * @return string
     */
    public function getLabel()
    {
        return $this->container['label'];
    }

    /**
     * Sets label
     *
     * @param string $label Label des données
     *
     * @return self
     */
    public function setLabel($label)
    {
        if ((mb_strlen($label) > 120)) {
            throw new \InvalidArgumentException('invalid length for $label when calling DataProcessingRestoreDto., must be smaller than or equal to 120.');
        }
        if ((mb_strlen($label) < 1)) {
            throw new \InvalidArgumentException('invalid length for $label when calling DataProcessingRestoreDto., must be bigger than or equal to 1.');
        }

        $this->container['label'] = $label;

        return $this;
    }

    /**
     * Gets state
     *
     * @return \OpenAPI\Client\Model\DataProcessingState|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param \OpenAPI\Client\Model\DataProcessingState|null $state state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets date_deployment
     *
     * @return \DateTime|null
     */
    public function getDateDeployment()
    {
        return $this->container['date_deployment'];
    }

    /**
     * Sets date_deployment
     *
     * @param \DateTime|null $date_deployment Deployment date
     *
     * @return self
     */
    public function setDateDeployment($date_deployment)
    {
        $this->container['date_deployment'] = $date_deployment;

        return $this;
    }

    /**
     * Gets date_creation
     *
     * @return \DateTime|null
     */
    public function getDateCreation()
    {
        return $this->container['date_creation'];
    }

    /**
     * Sets date_creation
     *
     * @param \DateTime|null $date_creation date_creation
     *
     * @return self
     */
    public function setDateCreation($date_creation)
    {
        $this->container['date_creation'] = $date_creation;

        return $this;
    }

    /**
     * Gets date_archived
     *
     * @return \DateTime|null
     */
    public function getDateArchived()
    {
        return $this->container['date_archived'];
    }

    /**
     * Sets date_archived
     *
     * @param \DateTime|null $date_archived date_archived
     *
     * @return self
     */
    public function setDateArchived($date_archived)
    {
        $this->container['date_archived'] = $date_archived;

        return $this;
    }

    /**
     * Gets archived
     *
     * @return bool|null
     */
    public function getArchived()
    {
        return $this->container['archived'];
    }

    /**
     * Sets archived
     *
     * @param bool|null $archived archived
     *
     * @return self
     */
    public function setArchived($archived)
    {
        $this->container['archived'] = $archived;

        return $this;
    }

    /**
     * Gets date_update
     *
     * @return \DateTime|null
     */
    public function getDateUpdate()
    {
        return $this->container['date_update'];
    }

    /**
     * Sets date_update
     *
     * @param \DateTime|null $date_update date_update
     *
     * @return self
     */
    public function setDateUpdate($date_update)
    {
        $this->container['date_update'] = $date_update;

        return $this;
    }

    /**
     * Gets version_description
     *
     * @return string|null
     */
    public function getVersionDescription()
    {
        return $this->container['version_description'];
    }

    /**
     * Sets version_description
     *
     * @param string|null $version_description version_description
     *
     * @return self
     */
    public function setVersionDescription($version_description)
    {
        if (!is_null($version_description) && (mb_strlen($version_description) > 800)) {
            throw new \InvalidArgumentException('invalid length for $version_description when calling DataProcessingRestoreDto., must be smaller than or equal to 800.');
        }

        $this->container['version_description'] = $version_description;

        return $this;
    }

    /**
     * Gets processing_type
     *
     * @return \OpenAPI\Client\Model\ProcessingType|null
     */
    public function getProcessingType()
    {
        return $this->container['processing_type'];
    }

    /**
     * Sets processing_type
     *
     * @param \OpenAPI\Client\Model\ProcessingType|null $processing_type processing_type
     *
     * @return self
     */
    public function setProcessingType($processing_type)
    {
        $this->container['processing_type'] = $processing_type;

        return $this;
    }

    /**
     * Gets area_id
     *
     * @return int|null
     */
    public function getAreaId()
    {
        return $this->container['area_id'];
    }

    /**
     * Sets area_id
     *
     * @param int|null $area_id area_id
     *
     * @return self
     */
    public function setAreaId($area_id)
    {
        $this->container['area_id'] = $area_id;

        return $this;
    }

    /**
     * Gets area
     *
     * @return \OpenAPI\Client\Model\AreaDto|null
     */
    public function getArea()
    {
        return $this->container['area'];
    }

    /**
     * Sets area
     *
     * @param \OpenAPI\Client\Model\AreaDto|null $area area
     *
     * @return self
     */
    public function setArea($area)
    {
        $this->container['area'] = $area;

        return $this;
    }

    /**
     * Gets entity
     *
     * @return \OpenAPI\Client\Model\AreaDto|null
     */
    public function getEntity()
    {
        return $this->container['entity'];
    }

    /**
     * Sets entity
     *
     * @param \OpenAPI\Client\Model\AreaDto|null $entity entity
     *
     * @return self
     */
    public function setEntity($entity)
    {
        $this->container['entity'] = $entity;

        return $this;
    }

    /**
     * Gets merged_from
     *
     * @return \OpenAPI\Client\Model\DataProcessingDto|null
     */
    public function getMergedFrom()
    {
        return $this->container['merged_from'];
    }

    /**
     * Sets merged_from
     *
     * @param \OpenAPI\Client\Model\DataProcessingDto|null $merged_from merged_from
     *
     * @return self
     */
    public function setMergedFrom($merged_from)
    {
        $this->container['merged_from'] = $merged_from;

        return $this;
    }

    /**
     * Gets merge_type
     *
     * @return \OpenAPI\Client\Model\RelationShipType|null
     */
    public function getMergeType()
    {
        return $this->container['merge_type'];
    }

    /**
     * Sets merge_type
     *
     * @param \OpenAPI\Client\Model\RelationShipType|null $merge_type merge_type
     *
     * @return self
     */
    public function setMergeType($merge_type)
    {
        $this->container['merge_type'] = $merge_type;

        return $this;
    }

    /**
     * Gets readonly
     *
     * @return bool|null
     */
    public function getReadonly()
    {
        return $this->container['readonly'];
    }

    /**
     * Sets readonly
     *
     * @param bool|null $readonly readonly
     *
     * @return self
     */
    public function setReadonly($readonly)
    {
        $this->container['readonly'] = $readonly;

        return $this;
    }

    /**
     * Gets editable
     *
     * @return bool|null
     */
    public function getEditable()
    {
        return $this->container['editable'];
    }

    /**
     * Sets editable
     *
     * @param bool|null $editable editable
     *
     * @return self
     */
    public function setEditable($editable)
    {
        $this->container['editable'] = $editable;

        return $this;
    }

    /**
     * Gets applications
     *
     * @return \OpenAPI\Client\Model\ApplicationDto[]|null
     */
    public function getApplications()
    {
        return $this->container['applications'];
    }

    /**
     * Sets applications
     *
     * @param \OpenAPI\Client\Model\ApplicationDto[]|null $applications Listing des applications associées => Il peut y avoir plusieurs workspaces associés
     *
     * @return self
     */
    public function setApplications($applications)
    {
        $this->container['applications'] = $applications;

        return $this;
    }

    /**
     * Gets work_flow_step_id
     *
     * @return int|null
     */
    public function getWorkFlowStepId()
    {
        return $this->container['work_flow_step_id'];
    }

    /**
     * Sets work_flow_step_id
     *
     * @param int|null $work_flow_step_id Le status du workflow => état de l'avancée de la saisie du traitement,  A voir comment on le gère
     *
     * @return self
     */
    public function setWorkFlowStepId($work_flow_step_id)
    {
        $this->container['work_flow_step_id'] = $work_flow_step_id;

        return $this;
    }

    /**
     * Gets workflow_step
     *
     * @return \OpenAPI\Client\Model\WorkFlowStepDto|null
     */
    public function getWorkflowStep()
    {
        return $this->container['workflow_step'];
    }

    /**
     * Sets workflow_step
     *
     * @param \OpenAPI\Client\Model\WorkFlowStepDto|null $workflow_step workflow_step
     *
     * @return self
     */
    public function setWorkflowStep($workflow_step)
    {
        $this->container['workflow_step'] = $workflow_step;

        return $this;
    }

    /**
     * Gets attachments
     *
     * @return \OpenAPI\Client\Model\AttachmentDto[]|null
     */
    public function getAttachments()
    {
        return $this->container['attachments'];
    }

    /**
     * Sets attachments
     *
     * @param \OpenAPI\Client\Model\AttachmentDto[]|null $attachments attachments
     *
     * @return self
     */
    public function setAttachments($attachments)
    {
        $this->container['attachments'] = $attachments;

        return $this;
    }

    /**
     * Gets ref
     *
     * @return string|null
     */
    public function getRef()
    {
        return $this->container['ref'];
    }

    /**
     * Sets ref
     *
     * @param string|null $ref Client is able to write is own reference
     *
     * @return self
     */
    public function setRef($ref)
    {
        if (!is_null($ref) && (mb_strlen($ref) > 50)) {
            throw new \InvalidArgumentException('invalid length for $ref when calling DataProcessingRestoreDto., must be smaller than or equal to 50.');
        }

        $this->container['ref'] = $ref;

        return $this;
    }

    /**
     * Gets processing_state
     *
     * @return \OpenAPI\Client\Model\ProcessingState|null
     */
    public function getProcessingState()
    {
        return $this->container['processing_state'];
    }

    /**
     * Sets processing_state
     *
     * @param \OpenAPI\Client\Model\ProcessingState|null $processing_state processing_state
     *
     * @return self
     */
    public function setProcessingState($processing_state)
    {
        $this->container['processing_state'] = $processing_state;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description Description longue du traitement (Peut aider pour la recherche full-text)
     *
     * @return self
     */
    public function setDescription($description)
    {
        if (!is_null($description) && (mb_strlen($description) > 3000)) {
            throw new \InvalidArgumentException('invalid length for $description when calling DataProcessingRestoreDto., must be smaller than or equal to 3000.');
        }

        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \OpenAPI\Client\Model\TagDto[]|null
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \OpenAPI\Client\Model\TagDto[]|null $tags Les tags associés au traitement (Pour un éventuel moteur de recherche)
     *
     * @return self
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets subject_right_process_description
     *
     * @return string|null
     */
    public function getSubjectRightProcessDescription()
    {
        return $this->container['subject_right_process_description'];
    }

    /**
     * Sets subject_right_process_description
     *
     * @param string|null $subject_right_process_description subject_right_process_description
     *
     * @return self
     */
    public function setSubjectRightProcessDescription($subject_right_process_description)
    {
        $this->container['subject_right_process_description'] = $subject_right_process_description;

        return $this;
    }

    /**
     * Gets right_of_information
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfInformation()
    {
        return $this->container['right_of_information'];
    }

    /**
     * Sets right_of_information
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_information right_of_information
     *
     * @return self
     */
    public function setRightOfInformation($right_of_information)
    {
        $this->container['right_of_information'] = $right_of_information;

        return $this;
    }

    /**
     * Gets right_of_access
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfAccess()
    {
        return $this->container['right_of_access'];
    }

    /**
     * Sets right_of_access
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_access right_of_access
     *
     * @return self
     */
    public function setRightOfAccess($right_of_access)
    {
        $this->container['right_of_access'] = $right_of_access;

        return $this;
    }

    /**
     * Gets right_of_rectification
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfRectification()
    {
        return $this->container['right_of_rectification'];
    }

    /**
     * Sets right_of_rectification
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_rectification right_of_rectification
     *
     * @return self
     */
    public function setRightOfRectification($right_of_rectification)
    {
        $this->container['right_of_rectification'] = $right_of_rectification;

        return $this;
    }

    /**
     * Gets right_of_erasure
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfErasure()
    {
        return $this->container['right_of_erasure'];
    }

    /**
     * Sets right_of_erasure
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_erasure right_of_erasure
     *
     * @return self
     */
    public function setRightOfErasure($right_of_erasure)
    {
        $this->container['right_of_erasure'] = $right_of_erasure;

        return $this;
    }

    /**
     * Gets right_of_restriction
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfRestriction()
    {
        return $this->container['right_of_restriction'];
    }

    /**
     * Sets right_of_restriction
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_restriction right_of_restriction
     *
     * @return self
     */
    public function setRightOfRestriction($right_of_restriction)
    {
        $this->container['right_of_restriction'] = $right_of_restriction;

        return $this;
    }

    /**
     * Gets right_of_opposition
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfOpposition()
    {
        return $this->container['right_of_opposition'];
    }

    /**
     * Sets right_of_opposition
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_opposition right_of_opposition
     *
     * @return self
     */
    public function setRightOfOpposition($right_of_opposition)
    {
        $this->container['right_of_opposition'] = $right_of_opposition;

        return $this;
    }

    /**
     * Gets right_of_data_portability
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getRightOfDataPortability()
    {
        return $this->container['right_of_data_portability'];
    }

    /**
     * Sets right_of_data_portability
     *
     * @param \OpenAPI\Client\Model\AccessType|null $right_of_data_portability right_of_data_portability
     *
     * @return self
     */
    public function setRightOfDataPortability($right_of_data_portability)
    {
        $this->container['right_of_data_portability'] = $right_of_data_portability;

        return $this;
    }

    /**
     * Gets advance_directives
     *
     * @return \OpenAPI\Client\Model\AccessType|null
     */
    public function getAdvanceDirectives()
    {
        return $this->container['advance_directives'];
    }

    /**
     * Sets advance_directives
     *
     * @param \OpenAPI\Client\Model\AccessType|null $advance_directives advance_directives
     *
     * @return self
     */
    public function setAdvanceDirectives($advance_directives)
    {
        $this->container['advance_directives'] = $advance_directives;

        return $this;
    }

    /**
     * Gets advance_directives_description
     *
     * @return string|null
     */
    public function getAdvanceDirectivesDescription()
    {
        return $this->container['advance_directives_description'];
    }

    /**
     * Sets advance_directives_description
     *
     * @param string|null $advance_directives_description advance_directives_description
     *
     * @return self
     */
    public function setAdvanceDirectivesDescription($advance_directives_description)
    {
        $this->container['advance_directives_description'] = $advance_directives_description;

        return $this;
    }

    /**
     * Gets right_of_information_description
     *
     * @return string|null
     */
    public function getRightOfInformationDescription()
    {
        return $this->container['right_of_information_description'];
    }

    /**
     * Sets right_of_information_description
     *
     * @param string|null $right_of_information_description right_of_information_description
     *
     * @return self
     */
    public function setRightOfInformationDescription($right_of_information_description)
    {
        $this->container['right_of_information_description'] = $right_of_information_description;

        return $this;
    }

    /**
     * Gets right_of_access_description
     *
     * @return string|null
     */
    public function getRightOfAccessDescription()
    {
        return $this->container['right_of_access_description'];
    }

    /**
     * Sets right_of_access_description
     *
     * @param string|null $right_of_access_description right_of_access_description
     *
     * @return self
     */
    public function setRightOfAccessDescription($right_of_access_description)
    {
        $this->container['right_of_access_description'] = $right_of_access_description;

        return $this;
    }

    /**
     * Gets right_of_rectification_description
     *
     * @return string|null
     */
    public function getRightOfRectificationDescription()
    {
        return $this->container['right_of_rectification_description'];
    }

    /**
     * Sets right_of_rectification_description
     *
     * @param string|null $right_of_rectification_description right_of_rectification_description
     *
     * @return self
     */
    public function setRightOfRectificationDescription($right_of_rectification_description)
    {
        $this->container['right_of_rectification_description'] = $right_of_rectification_description;

        return $this;
    }

    /**
     * Gets right_of_erasure_description
     *
     * @return string|null
     */
    public function getRightOfErasureDescription()
    {
        return $this->container['right_of_erasure_description'];
    }

    /**
     * Sets right_of_erasure_description
     *
     * @param string|null $right_of_erasure_description right_of_erasure_description
     *
     * @return self
     */
    public function setRightOfErasureDescription($right_of_erasure_description)
    {
        $this->container['right_of_erasure_description'] = $right_of_erasure_description;

        return $this;
    }

    /**
     * Gets right_of_restriction_description
     *
     * @return string|null
     */
    public function getRightOfRestrictionDescription()
    {
        return $this->container['right_of_restriction_description'];
    }

    /**
     * Sets right_of_restriction_description
     *
     * @param string|null $right_of_restriction_description right_of_restriction_description
     *
     * @return self
     */
    public function setRightOfRestrictionDescription($right_of_restriction_description)
    {
        $this->container['right_of_restriction_description'] = $right_of_restriction_description;

        return $this;
    }

    /**
     * Gets right_of_opposition_description
     *
     * @return string|null
     */
    public function getRightOfOppositionDescription()
    {
        return $this->container['right_of_opposition_description'];
    }

    /**
     * Sets right_of_opposition_description
     *
     * @param string|null $right_of_opposition_description right_of_opposition_description
     *
     * @return self
     */
    public function setRightOfOppositionDescription($right_of_opposition_description)
    {
        $this->container['right_of_opposition_description'] = $right_of_opposition_description;

        return $this;
    }

    /**
     * Gets right_of_data_portability_description
     *
     * @return string|null
     */
    public function getRightOfDataPortabilityDescription()
    {
        return $this->container['right_of_data_portability_description'];
    }

    /**
     * Sets right_of_data_portability_description
     *
     * @param string|null $right_of_data_portability_description right_of_data_portability_description
     *
     * @return self
     */
    public function setRightOfDataPortabilityDescription($right_of_data_portability_description)
    {
        $this->container['right_of_data_portability_description'] = $right_of_data_portability_description;

        return $this;
    }

    /**
     * Gets referent
     *
     * @return \OpenAPI\Client\Model\ActorDto|null
     */
    public function getReferent()
    {
        return $this->container['referent'];
    }

    /**
     * Sets referent
     *
     * @param \OpenAPI\Client\Model\ActorDto|null $referent referent
     *
     * @return self
     */
    public function setReferent($referent)
    {
        $this->container['referent'] = $referent;

        return $this;
    }

    /**
     * Gets stake_holders
     *
     * @return \OpenAPI\Client\Model\UserDataTreatmentDto[]|null
     */
    public function getStakeHolders()
    {
        return $this->container['stake_holders'];
    }

    /**
     * Sets stake_holders
     *
     * @param \OpenAPI\Client\Model\UserDataTreatmentDto[]|null $stake_holders stake_holders
     *
     * @return self
     */
    public function setStakeHolders($stake_holders)
    {
        $this->container['stake_holders'] = $stake_holders;

        return $this;
    }

    /**
     * Gets assessment_scoring
     *
     * @return bool|null
     */
    public function getAssessmentScoring()
    {
        return $this->container['assessment_scoring'];
    }

    /**
     * Sets assessment_scoring
     *
     * @param bool|null $assessment_scoring assessment_scoring
     *
     * @return self
     */
    public function setAssessmentScoring($assessment_scoring)
    {
        $this->container['assessment_scoring'] = $assessment_scoring;

        return $this;
    }

    /**
     * Gets automatic_decision
     *
     * @return bool|null
     */
    public function getAutomaticDecision()
    {
        return $this->container['automatic_decision'];
    }

    /**
     * Sets automatic_decision
     *
     * @param bool|null $automatic_decision automatic_decision
     *
     * @return self
     */
    public function setAutomaticDecision($automatic_decision)
    {
        $this->container['automatic_decision'] = $automatic_decision;

        return $this;
    }

    /**
     * Gets systematic_monitoring
     *
     * @return bool|null
     */
    public function getSystematicMonitoring()
    {
        return $this->container['systematic_monitoring'];
    }

    /**
     * Sets systematic_monitoring
     *
     * @param bool|null $systematic_monitoring systematic_monitoring
     *
     * @return self
     */
    public function setSystematicMonitoring($systematic_monitoring)
    {
        $this->container['systematic_monitoring'] = $systematic_monitoring;

        return $this;
    }

    /**
     * Gets special_category_data
     *
     * @return bool|null
     */
    public function getSpecialCategoryData()
    {
        return $this->container['special_category_data'];
    }

    /**
     * Sets special_category_data
     *
     * @param bool|null $special_category_data special_category_data
     *
     * @return self
     */
    public function setSpecialCategoryData($special_category_data)
    {
        $this->container['special_category_data'] = $special_category_data;

        return $this;
    }

    /**
     * Gets large_scale_collection
     *
     * @return bool|null
     */
    public function getLargeScaleCollection()
    {
        return $this->container['large_scale_collection'];
    }

    /**
     * Sets large_scale_collection
     *
     * @param bool|null $large_scale_collection large_scale_collection
     *
     * @return self
     */
    public function setLargeScaleCollection($large_scale_collection)
    {
        $this->container['large_scale_collection'] = $large_scale_collection;

        return $this;
    }

    /**
     * Gets cross_referencing
     *
     * @return bool|null
     */
    public function getCrossReferencing()
    {
        return $this->container['cross_referencing'];
    }

    /**
     * Sets cross_referencing
     *
     * @param bool|null $cross_referencing cross_referencing
     *
     * @return self
     */
    public function setCrossReferencing($cross_referencing)
    {
        $this->container['cross_referencing'] = $cross_referencing;

        return $this;
    }

    /**
     * Gets out_of_eu_transfers
     *
     * @return bool|null
     */
    public function getOutOfEuTransfers()
    {
        return $this->container['out_of_eu_transfers'];
    }

    /**
     * Sets out_of_eu_transfers
     *
     * @param bool|null $out_of_eu_transfers out_of_eu_transfers
     *
     * @return self
     */
    public function setOutOfEuTransfers($out_of_eu_transfers)
    {
        $this->container['out_of_eu_transfers'] = $out_of_eu_transfers;

        return $this;
    }

    /**
     * Gets vulnerable_people
     *
     * @return bool|null
     */
    public function getVulnerablePeople()
    {
        return $this->container['vulnerable_people'];
    }

    /**
     * Sets vulnerable_people
     *
     * @param bool|null $vulnerable_people vulnerable_people
     *
     * @return self
     */
    public function setVulnerablePeople($vulnerable_people)
    {
        $this->container['vulnerable_people'] = $vulnerable_people;

        return $this;
    }

    /**
     * Gets is_dpia_required
     *
     * @return bool|null
     */
    public function getIsDpiaRequired()
    {
        return $this->container['is_dpia_required'];
    }

    /**
     * Sets is_dpia_required
     *
     * @param bool|null $is_dpia_required is_dpia_required
     *
     * @return self
     */
    public function setIsDpiaRequired($is_dpia_required)
    {
        $this->container['is_dpia_required'] = $is_dpia_required;

        return $this;
    }

    /**
     * Gets dpia_date
     *
     * @return \DateTime|null
     */
    public function getDpiaDate()
    {
        return $this->container['dpia_date'];
    }

    /**
     * Sets dpia_date
     *
     * @param \DateTime|null $dpia_date dpia_date
     *
     * @return self
     */
    public function setDpiaDate($dpia_date)
    {
        $this->container['dpia_date'] = $dpia_date;

        return $this;
    }

    /**
     * Gets innovative_use
     *
     * @return bool|null
     */
    public function getInnovativeUse()
    {
        return $this->container['innovative_use'];
    }

    /**
     * Sets innovative_use
     *
     * @param bool|null $innovative_use innovative_use
     *
     * @return self
     */
    public function setInnovativeUse($innovative_use)
    {
        $this->container['innovative_use'] = $innovative_use;

        return $this;
    }

    /**
     * Gets exclusion_benefit_right_contract
     *
     * @return bool|null
     */
    public function getExclusionBenefitRightContract()
    {
        return $this->container['exclusion_benefit_right_contract'];
    }

    /**
     * Sets exclusion_benefit_right_contract
     *
     * @param bool|null $exclusion_benefit_right_contract exclusion_benefit_right_contract
     *
     * @return self
     */
    public function setExclusionBenefitRightContract($exclusion_benefit_right_contract)
    {
        $this->container['exclusion_benefit_right_contract'] = $exclusion_benefit_right_contract;

        return $this;
    }

    /**
     * Gets customers
     *
     * @return \OpenAPI\Client\Model\ActorDto[]|null
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     *
     * @param \OpenAPI\Client\Model\ActorDto[]|null $customers customers
     *
     * @return self
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets recipients
     *
     * @return \OpenAPI\Client\Model\RecipientDto[]|null
     */
    public function getRecipients()
    {
        return $this->container['recipients'];
    }

    /**
     * Sets recipients
     *
     * @param \OpenAPI\Client\Model\RecipientDto[]|null $recipients recipients
     *
     * @return self
     */
    public function setRecipients($recipients)
    {
        $this->container['recipients'] = $recipients;

        return $this;
    }

    /**
     * Gets data_retention_rules
     *
     * @return \OpenAPI\Client\Model\DataRetentionRuleDto[]|null
     */
    public function getDataRetentionRules()
    {
        return $this->container['data_retention_rules'];
    }

    /**
     * Sets data_retention_rules
     *
     * @param \OpenAPI\Client\Model\DataRetentionRuleDto[]|null $data_retention_rules data_retention_rules
     *
     * @return self
     */
    public function setDataRetentionRules($data_retention_rules)
    {
        $this->container['data_retention_rules'] = $data_retention_rules;

        return $this;
    }

    /**
     * Gets purposes
     *
     * @return \OpenAPI\Client\Model\PurposeDto[]|null
     */
    public function getPurposes()
    {
        return $this->container['purposes'];
    }

    /**
     * Sets purposes
     *
     * @param \OpenAPI\Client\Model\PurposeDto[]|null $purposes purposes
     *
     * @return self
     */
    public function setPurposes($purposes)
    {
        $this->container['purposes'] = $purposes;

        return $this;
    }

    /**
     * Gets security_measures
     *
     * @return \OpenAPI\Client\Model\SecurityMeasureDataTreatmentDto[]|null
     */
    public function getSecurityMeasures()
    {
        return $this->container['security_measures'];
    }

    /**
     * Sets security_measures
     *
     * @param \OpenAPI\Client\Model\SecurityMeasureDataTreatmentDto[]|null $security_measures Mesure de sécurité techniques
     *
     * @return self
     */
    public function setSecurityMeasures($security_measures)
    {
        $this->container['security_measures'] = $security_measures;

        return $this;
    }

    /**
     * Gets person_categories
     *
     * @return \OpenAPI\Client\Model\PersonCategoryDto[]|null
     */
    public function getPersonCategories()
    {
        return $this->container['person_categories'];
    }

    /**
     * Sets person_categories
     *
     * @param \OpenAPI\Client\Model\PersonCategoryDto[]|null $person_categories person_categories
     *
     * @return self
     */
    public function setPersonCategories($person_categories)
    {
        $this->container['person_categories'] = $person_categories;

        return $this;
    }

    /**
     * Gets progression
     *
     * @return double|null
     */
    public function getProgression()
    {
        return $this->container['progression'];
    }

    /**
     * Sets progression
     *
     * @param double|null $progression progression
     *
     * @return self
     */
    public function setProgression($progression)
    {
        $this->container['progression'] = $progression;

        return $this;
    }

    /**
     * Gets quality
     *
     * @return double|null
     */
    public function getQuality()
    {
        return $this->container['quality'];
    }

    /**
     * Sets quality
     *
     * @param double|null $quality quality
     *
     * @return self
     */
    public function setQuality($quality)
    {
        $this->container['quality'] = $quality;

        return $this;
    }

    /**
     * Gets risk_level
     *
     * @return double|null
     */
    public function getRiskLevel()
    {
        return $this->container['risk_level'];
    }

    /**
     * Sets risk_level
     *
     * @param double|null $risk_level risk_level
     *
     * @return self
     */
    public function setRiskLevel($risk_level)
    {
        $this->container['risk_level'] = $risk_level;

        return $this;
    }

    /**
     * Gets visible
     *
     * @return bool|null
     */
    public function getVisible()
    {
        return $this->container['visible'];
    }

    /**
     * Sets visible
     *
     * @param bool|null $visible visible
     *
     * @return self
     */
    public function setVisible($visible)
    {
        $this->container['visible'] = $visible;

        return $this;
    }

    /**
     * Gets work_space_id
     *
     * @return int|null
     */
    public function getWorkSpaceId()
    {
        return $this->container['work_space_id'];
    }

    /**
     * Sets work_space_id
     *
     * @param int|null $work_space_id work_space_id
     *
     * @return self
     */
    public function setWorkSpaceId($work_space_id)
    {
        $this->container['work_space_id'] = $work_space_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


