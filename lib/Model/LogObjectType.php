<?php
/**
 * LogObjectType
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Dastra API
 *
 * Dastra's public REST API
 *
 * The version of the OpenAPI document: v1
 * Contact: antoine.bidault@dastra.eu
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;
use \OpenAPI\Client\ObjectSerializer;

/**
 * LogObjectType Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class LogObjectType
{
    /**
     * Possible values of this enum
     */
    const COMMENT = 'Comment';
    const DATA_PROCESSING = 'DataProcessing';
    const USER_REQUEST = 'UserRequest';
    const COOKIE_WIDGET = 'CookieWidget';
    const DATA_BREACH = 'DataBreach';
    const TASK = 'Task';
    const ATTACHMENT = 'Attachment';
    const CUSTOMER = 'Customer';
    const ACTOR = 'Actor';
    const USER = 'User';
    const DATA_SET = 'DataSet';
    const DATA_RETENTION_RULE = 'DataRetentionRule';
    const TAG = 'Tag';
    const VENDOR = 'Vendor';
    const APPLICATION = 'Application';
    const WORKFLOW_STEP = 'WorkflowStep';
    const SECURITY_MEASURE = 'SecurityMeasure';
    const TEAM = 'Team';
    const ROLE = 'Role';
    const ARCHIVING_POLICY = 'ArchivingPolicy';
    const DATA_FIELD = 'DataField';
    const AUDIT_LOG = 'AuditLog';
    const USER_REQUEST_MESSAGE = 'UserRequestMessage';
    const ITERATION = 'Iteration';
    const PROJECT = 'Project';
    const RISK = 'Risk';
    const DATA_PROTECTION_AUTHORITY = 'DataProtectionAuthority';
    const AUDIT_TEMPLATE = 'AuditTemplate';
    const AUDIT_RESPONSE = 'AuditResponse';
    const AREA = 'Area';
    const USER_REQUEST_SETTING = 'UserRequestSetting';
    const PURPOSE = 'Purpose';
    
    /**
     * Gets allowable values of the enum
     * @return string[]
     */
    public static function getAllowableEnumValues()
    {
        return [
            self::COMMENT,
            self::DATA_PROCESSING,
            self::USER_REQUEST,
            self::COOKIE_WIDGET,
            self::DATA_BREACH,
            self::TASK,
            self::ATTACHMENT,
            self::CUSTOMER,
            self::ACTOR,
            self::USER,
            self::DATA_SET,
            self::DATA_RETENTION_RULE,
            self::TAG,
            self::VENDOR,
            self::APPLICATION,
            self::WORKFLOW_STEP,
            self::SECURITY_MEASURE,
            self::TEAM,
            self::ROLE,
            self::ARCHIVING_POLICY,
            self::DATA_FIELD,
            self::AUDIT_LOG,
            self::USER_REQUEST_MESSAGE,
            self::ITERATION,
            self::PROJECT,
            self::RISK,
            self::DATA_PROTECTION_AUTHORITY,
            self::AUDIT_TEMPLATE,
            self::AUDIT_RESPONSE,
            self::AREA,
            self::USER_REQUEST_SETTING,
            self::PURPOSE,
        ];
    }
}


