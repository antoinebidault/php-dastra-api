<?php
/**
 * UserRequestStatValueDto
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Dastra API
 *
 * Dastra's public REST API
 *
 * The version of the OpenAPI document: v1
 * Contact: antoine.bidault@dastra.eu
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.1.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * UserRequestStatValueDto Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class UserRequestStatValueDto implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'UserRequestStatValueDto';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id' => 'int',
        'title' => 'string',
        'state' => '\OpenAPI\Client\Model\UserRequestState',
        'work_flow_step' => '\OpenAPI\Client\Model\WorkFlowStepDto',
        'date_creation' => '\DateTime',
        'expiry_time' => '\DateTime',
        'date_closed' => '\DateTime',
        'remaining_days' => 'int',
        'days_to_close' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id' => 'int32',
        'title' => null,
        'state' => null,
        'work_flow_step' => null,
        'date_creation' => 'date-time',
        'expiry_time' => 'date-time',
        'date_closed' => 'date-time',
        'remaining_days' => 'int32',
        'days_to_close' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id' => 'id',
        'title' => 'title',
        'state' => 'state',
        'work_flow_step' => 'workFlowStep',
        'date_creation' => 'dateCreation',
        'expiry_time' => 'expiryTime',
        'date_closed' => 'dateClosed',
        'remaining_days' => 'remainingDays',
        'days_to_close' => 'daysToClose'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id' => 'setId',
        'title' => 'setTitle',
        'state' => 'setState',
        'work_flow_step' => 'setWorkFlowStep',
        'date_creation' => 'setDateCreation',
        'expiry_time' => 'setExpiryTime',
        'date_closed' => 'setDateClosed',
        'remaining_days' => 'setRemainingDays',
        'days_to_close' => 'setDaysToClose'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id' => 'getId',
        'title' => 'getTitle',
        'state' => 'getState',
        'work_flow_step' => 'getWorkFlowStep',
        'date_creation' => 'getDateCreation',
        'expiry_time' => 'getExpiryTime',
        'date_closed' => 'getDateClosed',
        'remaining_days' => 'getRemainingDays',
        'days_to_close' => 'getDaysToClose'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id'] = $data['id'] ?? null;
        $this->container['title'] = $data['title'] ?? null;
        $this->container['state'] = $data['state'] ?? null;
        $this->container['work_flow_step'] = $data['work_flow_step'] ?? null;
        $this->container['date_creation'] = $data['date_creation'] ?? null;
        $this->container['expiry_time'] = $data['expiry_time'] ?? null;
        $this->container['date_closed'] = $data['date_closed'] ?? null;
        $this->container['remaining_days'] = $data['remaining_days'] ?? null;
        $this->container['days_to_close'] = $data['days_to_close'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id
     *
     * @return int|null
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int|null $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets title
     *
     * @return string|null
     */
    public function getTitle()
    {
        return $this->container['title'];
    }

    /**
     * Sets title
     *
     * @param string|null $title title
     *
     * @return self
     */
    public function setTitle($title)
    {
        $this->container['title'] = $title;

        return $this;
    }

    /**
     * Gets state
     *
     * @return \OpenAPI\Client\Model\UserRequestState|null
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param \OpenAPI\Client\Model\UserRequestState|null $state state
     *
     * @return self
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets work_flow_step
     *
     * @return \OpenAPI\Client\Model\WorkFlowStepDto|null
     */
    public function getWorkFlowStep()
    {
        return $this->container['work_flow_step'];
    }

    /**
     * Sets work_flow_step
     *
     * @param \OpenAPI\Client\Model\WorkFlowStepDto|null $work_flow_step work_flow_step
     *
     * @return self
     */
    public function setWorkFlowStep($work_flow_step)
    {
        $this->container['work_flow_step'] = $work_flow_step;

        return $this;
    }

    /**
     * Gets date_creation
     *
     * @return \DateTime|null
     */
    public function getDateCreation()
    {
        return $this->container['date_creation'];
    }

    /**
     * Sets date_creation
     *
     * @param \DateTime|null $date_creation date_creation
     *
     * @return self
     */
    public function setDateCreation($date_creation)
    {
        $this->container['date_creation'] = $date_creation;

        return $this;
    }

    /**
     * Gets expiry_time
     *
     * @return \DateTime|null
     */
    public function getExpiryTime()
    {
        return $this->container['expiry_time'];
    }

    /**
     * Sets expiry_time
     *
     * @param \DateTime|null $expiry_time expiry_time
     *
     * @return self
     */
    public function setExpiryTime($expiry_time)
    {
        $this->container['expiry_time'] = $expiry_time;

        return $this;
    }

    /**
     * Gets date_closed
     *
     * @return \DateTime|null
     */
    public function getDateClosed()
    {
        return $this->container['date_closed'];
    }

    /**
     * Sets date_closed
     *
     * @param \DateTime|null $date_closed date_closed
     *
     * @return self
     */
    public function setDateClosed($date_closed)
    {
        $this->container['date_closed'] = $date_closed;

        return $this;
    }

    /**
     * Gets remaining_days
     *
     * @return int|null
     */
    public function getRemainingDays()
    {
        return $this->container['remaining_days'];
    }

    /**
     * Sets remaining_days
     *
     * @param int|null $remaining_days remaining_days
     *
     * @return self
     */
    public function setRemainingDays($remaining_days)
    {
        $this->container['remaining_days'] = $remaining_days;

        return $this;
    }

    /**
     * Gets days_to_close
     *
     * @return int|null
     */
    public function getDaysToClose()
    {
        return $this->container['days_to_close'];
    }

    /**
     * Sets days_to_close
     *
     * @param int|null $days_to_close days_to_close
     *
     * @return self
     */
    public function setDaysToClose($days_to_close)
    {
        $this->container['days_to_close'] = $days_to_close;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


